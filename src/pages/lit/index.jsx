import { useState, useContext } from "react";
import Head from "next/head";
import Image from "next/image";
import LitJsSdk from "lit-js-sdk";
import Cookies from "js-cookie";

import { useUuidStore } from "../../store/uuidStore";

const accessControlConditions = [
  {
    contractAddress: "0x25ed58c027921E14D86380eA2646E3a1B5C55A8b",
    standardContractType: "ERC721",
    chain: "ethereum",
    method: "balanceOf",
    parameters: [":userAddress"],
    returnValueTest: {
      comparator: ">",
      value: "0",
    },
  },
];

const Lit = () => {
  const [connected, setConnected] = useState();
  const id = useUuidStore((state) => state.id);

  async function connect() {
    const resourceId = {
      baseUrl: "http://localhost:3000",
      path: "/lit/perks",
      orgId: "",
      role: "",
      extraData: id,
    };

    const client = new LitJsSdk.LitNodeClient({ alertWhenUnauthorized: false });
    await client.connect();
    const authSig = await LitJsSdk.checkAndSignAuthMessage({
      chain: "ethereum",
    });

    await client.saveSigningCondition({
      accessControlConditions,
      chain: "ethereum",
      authSig,
      resourceId,
    });

    console.log("client", client);
    try {
      const jwt = await client.getSignedToken({
        accessControlConditions,
        chain: "ethereum",
        authSig,
        resourceId: resourceId,
      });
      Cookies.set("lit-auth", jwt, { expires: 1 });
    } catch (err) {
      console.log("error: ", err);
    }
    setConnected(true);
  }

  return (
    <div>
      <Head>
        <title>Perks Access</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>Developer DAO Access</h1>
      {!connected && <button onClick={connect}>Connect</button>}
    </div>
  );
};

export default Lit;
